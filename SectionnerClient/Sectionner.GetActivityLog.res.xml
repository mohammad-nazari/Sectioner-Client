<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope
  xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:ns="Sectionner">
 <SOAP-ENV:Body>
  <ns:GetActivityLogResponse>
   <!-- std::vector<ns__ActivityLog> &responseActivityLogInfo -->
   <responseActivityLogInfo>
    <!-- ns__ReportRange activityLogStartEndDateTime -->
    <activityLogStartEndDateTime>
     <!-- time_t reportStartDate -->
     <reportStartDate>2016-05-24T06:19:17Z</reportStartDate>
     <!-- time_t reportEndDate -->
     <reportEndDate>2016-05-24T06:19:17Z</reportEndDate>
    </activityLogStartEndDateTime>
    <!-- std::string activityLogData -->
    <activityLogData></activityLogData>
    <!-- ns__Device activityLogDevice -->
    <activityLogDevice>
     <!-- int deviceSerialNumber -->
     <deviceSerialNumber>0</deviceSerialNumber>
     <!-- enum ns__DeviceModel deviceModel -->
     <deviceModel>SECTIONNER</deviceModel>
     <!-- std::string deviceName -->
     <deviceName></deviceName>
     <!-- std::string deviceFirmWareVersion -->
     <deviceFirmWareVersion></deviceFirmWareVersion>
     <!-- std::string deviceNikeName -->
     <deviceNikeName></deviceNikeName>
     <!-- std::string deviceLocation -->
     <deviceLocation></deviceLocation>
     <!-- std::string deviceCity -->
     <deviceCity></deviceCity>
     <!-- int deviceSocket -->
     <deviceSocket>0</deviceSocket>
     <!-- std::string deviceDNSAddress -->
     <deviceDNSAddress></deviceDNSAddress>
     <!-- ns__IP deviceIP -->
     <deviceIP>
      <!-- int ip1 -->
      <ip1>0</ip1>
      <!-- int ip2 -->
      <ip2>0</ip2>
      <!-- int ip3 -->
      <ip3>0</ip3>
      <!-- int ip4 -->
      <ip4>0</ip4>
     </deviceIP>
     <!-- int devicePort -->
     <devicePort>0</devicePort>
     <!-- time_t deviceDateTime -->
     <deviceDateTime>2016-05-24T06:19:17Z</deviceDateTime>
     <!-- ns__Mobile deviceMobileInfo -->
     <deviceMobileInfo>
      <!-- LONG64 mobileNumber -->
      <mobileNumber>0</mobileNumber>
      <!-- enum ns__SimcardType mobileSimCardType -->
      <mobileSimCardType>MCI</mobileSimCardType>
      <!-- int mobileChargeValue -->
      <mobileChargeValue>0</mobileChargeValue>
      <!-- int mobileSignalValue -->
      <mobileSignalValue>0</mobileSignalValue>
     </deviceMobileInfo>
     <!-- ns__Server deviceServerInfo -->
     <deviceServerInfo>
      <!-- std::string serverDNSAddress -->
      <serverDNSAddress></serverDNSAddress>
      <!-- ns__IP serverIP -->
      <serverIP>
       <!-- int ip1 -->
       <ip1>0</ip1>
       <!-- int ip2 -->
       <ip2>0</ip2>
       <!-- int ip3 -->
       <ip3>0</ip3>
       <!-- int ip4 -->
       <ip4>0</ip4>
      </serverIP>
      <!-- int serverPort -->
      <serverPort>0</serverPort>
      <!-- ns__ErrorCode serverError -->
      <serverError>
       <!-- int errorNumber -->
       <errorNumber>0</errorNumber>
       <!-- std::string errorMessage -->
       <errorMessage></errorMessage>
       <!-- enum ns__SettingLevel errorType -->
       <errorType>Normal</errorType>
      </serverError>
     </deviceServerInfo>
     <!-- ns__Camera deviceCameraInfo -->
     <deviceCameraInfo>
      <!-- std::string cameraName -->
      <cameraName></cameraName>
      <!-- int cameraSocket -->
      <cameraSocket>0</cameraSocket>
      <!-- ns__IP cameraIP -->
      <cameraIP>
       <!-- int ip1 -->
       <ip1>0</ip1>
       <!-- int ip2 -->
       <ip2>0</ip2>
       <!-- int ip3 -->
       <ip3>0</ip3>
       <!-- int ip4 -->
       <ip4>0</ip4>
      </cameraIP>
      <!-- int cameraPort -->
      <cameraPort>0</cameraPort>
      <!-- ns__ErrorCode cameraError -->
      <cameraError>
       <!-- int errorNumber -->
       <errorNumber>0</errorNumber>
       <!-- std::string errorMessage -->
       <errorMessage></errorMessage>
       <!-- enum ns__SettingLevel errorType -->
       <errorType>Normal</errorType>
      </cameraError>
     </deviceCameraInfo>
     <!-- ns__Gprs deviceGprsInfo -->
     <deviceGprsInfo>
      <!-- std::string gprsDNSAddress -->
      <gprsDNSAddress></gprsDNSAddress>
      <!-- ns__IP gprsIP -->
      <gprsIP>
       <!-- int ip1 -->
       <ip1>0</ip1>
       <!-- int ip2 -->
       <ip2>0</ip2>
       <!-- int ip3 -->
       <ip3>0</ip3>
       <!-- int ip4 -->
       <ip4>0</ip4>
      </gprsIP>
      <!-- int gprsPort -->
      <gprsPort>0</gprsPort>
      <!-- ns__ErrorCode gprsError -->
      <gprsError>
       <!-- int errorNumber -->
       <errorNumber>0</errorNumber>
       <!-- std::string errorMessage -->
       <errorMessage></errorMessage>
       <!-- enum ns__SettingLevel errorType -->
       <errorType>Normal</errorType>
      </gprsError>
     </deviceGprsInfo>
     <!-- std::vector<LONG64> deviceSMSContact -->
     <deviceSMSContact>0</deviceSMSContact>
     <!-- std::vector<LONG64> deviceSMSContact -->
     <deviceSMSContact>0</deviceSMSContact>
     <!-- std::vector<LONG64> deviceSMSConfig -->
     <deviceSMSConfig>0</deviceSMSConfig>
     <!-- std::vector<LONG64> deviceSMSConfig -->
     <deviceSMSConfig>0</deviceSMSConfig>
     <!-- std::string deviceFlags -->
     <deviceFlags>000000000000000000</deviceFlags>
     <!-- bool deviceSMSCommand -->
     <deviceSMSCommand>false</deviceSMSCommand>
     <!-- bool deviceGSMCommand -->
     <deviceGSMCommand>false</deviceGSMCommand>
     <!-- bool deviceKeyBoardCommand -->
     <deviceKeyBoardCommand>false</deviceKeyBoardCommand>
     <!-- bool deviceBuzzerOnOff -->
     <deviceBuzzerOnOff>false</deviceBuzzerOnOff>
     <!-- bool deviceReset -->
     <deviceReset>false</deviceReset>
     <!-- int deviceSamplingTime -->
     <deviceSamplingTime>60</deviceSamplingTime>
     <!-- ns__Picture devicePicture -->
     <devicePicture>
      <!-- int pictureSize -->
      <pictureSize>0</pictureSize>
      <!-- int picturePartSize -->
      <picturePartSize>0</picturePartSize>
      <!-- int picturePartNumbers -->
      <picturePartNumbers>0</picturePartNumbers>
      <!-- int pictureCRC -->
      <pictureCRC>0</pictureCRC>
      <!-- std::vector<ns__PicturePart> pictureParts -->
      <pictureParts>
       <!-- int partIndex -->
       <partIndex>0</partIndex>
       <!-- std::string partData -->
       <partData></partData>
       <!-- int partCRC -->
       <partCRC>0</partCRC>
      </pictureParts>
      <!-- std::vector<ns__PicturePart> pictureParts -->
      <pictureParts>
       <!-- int partIndex -->
       <partIndex>0</partIndex>
       <!-- std::string partData -->
       <partData></partData>
       <!-- int partCRC -->
       <partCRC>0</partCRC>
      </pictureParts>
     </devicePicture>
     <!-- std::vector<bool> deviceRelays -->
     <deviceRelays>false</deviceRelays>
     <!-- std::vector<bool> deviceRelays -->
     <deviceRelays>false</deviceRelays>
     <!-- std::vector<ns__Request> deviceRequests -->
     <deviceRequests>
      <!-- enum ns__RequestType requestRequestType -->
      <requestRequestType>SAMPLING</requestRequestType>
     </deviceRequests>
     <!-- std::vector<ns__Request> deviceRequests -->
     <deviceRequests>
      <!-- enum ns__RequestType requestRequestType -->
      <requestRequestType>SAMPLING</requestRequestType>
     </deviceRequests>
     <!-- std::vector<ns__SensorExtension> deviceSensors -->
     <deviceSensors>
      <!-- enum ns__SensorName sensorName -->
      <sensorName>TEMPERATURE</sensorName>
      <!-- std::vector<ns__Sensor> deviceSensors -->
      <deviceSensors>
       <!-- std::string sensorNikeName -->
       <sensorNikeName></sensorNikeName>
       <!-- double sensorValue -->
       <sensorValue>0</sensorValue>
       <!-- int sensorCalibration -->
       <sensorCalibration>0</sensorCalibration>
       <!-- int sensorMinimumValue -->
       <sensorMinimumValue>0</sensorMinimumValue>
       <!-- int sensorMaximumValue -->
       <sensorMaximumValue>0</sensorMaximumValue>
       <!-- int sensorMaximumThreshold -->
       <sensorMaximumThreshold>0</sensorMaximumThreshold>
       <!-- int sensorMinimumThreshold -->
       <sensorMinimumThreshold>0</sensorMinimumThreshold>
       <!-- bool sensorSMSOnOff -->
       <sensorSMSOnOff>false</sensorSMSOnOff>
       <!-- bool sensorBuzzerOnOff -->
       <sensorBuzzerOnOff>false</sensorBuzzerOnOff>
       <!-- ns__Relay sensorRelay -->
       <sensorRelay>
       </sensorRelay>
       <!-- bool sensorLEDFlag -->
       <sensorLEDFlag>false</sensorLEDFlag>
       <!-- enum ns__SensorType sensorType -->
       <sensorType>Multi</sensorType>
       <!-- ns__ErrorCode sensorError -->
       <sensorError>
       </sensorError>
      </deviceSensors>
      <!-- std::vector<ns__Sensor> deviceSensors -->
      <deviceSensors>
       <!-- std::string sensorNikeName -->
       <sensorNikeName></sensorNikeName>
       <!-- double sensorValue -->
       <sensorValue>0</sensorValue>
       <!-- int sensorCalibration -->
       <sensorCalibration>0</sensorCalibration>
       <!-- int sensorMinimumValue -->
       <sensorMinimumValue>0</sensorMinimumValue>
       <!-- int sensorMaximumValue -->
       <sensorMaximumValue>0</sensorMaximumValue>
       <!-- int sensorMaximumThreshold -->
       <sensorMaximumThreshold>0</sensorMaximumThreshold>
       <!-- int sensorMinimumThreshold -->
       <sensorMinimumThreshold>0</sensorMinimumThreshold>
       <!-- bool sensorSMSOnOff -->
       <sensorSMSOnOff>false</sensorSMSOnOff>
       <!-- bool sensorBuzzerOnOff -->
       <sensorBuzzerOnOff>false</sensorBuzzerOnOff>
       <!-- ns__Relay sensorRelay -->
       <sensorRelay>
       </sensorRelay>
       <!-- bool sensorLEDFlag -->
       <sensorLEDFlag>false</sensorLEDFlag>
       <!-- enum ns__SensorType sensorType -->
       <sensorType>Multi</sensorType>
       <!-- ns__ErrorCode sensorError -->
       <sensorError>
       </sensorError>
      </deviceSensors>
     </deviceSensors>
     <!-- std::vector<ns__SensorExtension> deviceSensors -->
     <deviceSensors>
      <!-- enum ns__SensorName sensorName -->
      <sensorName>TEMPERATURE</sensorName>
      <!-- std::vector<ns__Sensor> deviceSensors -->
      <deviceSensors>
       <!-- std::string sensorNikeName -->
       <sensorNikeName></sensorNikeName>
       <!-- double sensorValue -->
       <sensorValue>0</sensorValue>
       <!-- int sensorCalibration -->
       <sensorCalibration>0</sensorCalibration>
       <!-- int sensorMinimumValue -->
       <sensorMinimumValue>0</sensorMinimumValue>
       <!-- int sensorMaximumValue -->
       <sensorMaximumValue>0</sensorMaximumValue>
       <!-- int sensorMaximumThreshold -->
       <sensorMaximumThreshold>0</sensorMaximumThreshold>
       <!-- int sensorMinimumThreshold -->
       <sensorMinimumThreshold>0</sensorMinimumThreshold>
       <!-- bool sensorSMSOnOff -->
       <sensorSMSOnOff>false</sensorSMSOnOff>
       <!-- bool sensorBuzzerOnOff -->
       <sensorBuzzerOnOff>false</sensorBuzzerOnOff>
       <!-- ns__Relay sensorRelay -->
       <sensorRelay>
       </sensorRelay>
       <!-- bool sensorLEDFlag -->
       <sensorLEDFlag>false</sensorLEDFlag>
       <!-- enum ns__SensorType sensorType -->
       <sensorType>Multi</sensorType>
       <!-- ns__ErrorCode sensorError -->
       <sensorError>
       </sensorError>
      </deviceSensors>
      <!-- std::vector<ns__Sensor> deviceSensors -->
      <deviceSensors>
       <!-- std::string sensorNikeName -->
       <sensorNikeName></sensorNikeName>
       <!-- double sensorValue -->
       <sensorValue>0</sensorValue>
       <!-- int sensorCalibration -->
       <sensorCalibration>0</sensorCalibration>
       <!-- int sensorMinimumValue -->
       <sensorMinimumValue>0</sensorMinimumValue>
       <!-- int sensorMaximumValue -->
       <sensorMaximumValue>0</sensorMaximumValue>
       <!-- int sensorMaximumThreshold -->
       <sensorMaximumThreshold>0</sensorMaximumThreshold>
       <!-- int sensorMinimumThreshold -->
       <sensorMinimumThreshold>0</sensorMinimumThreshold>
       <!-- bool sensorSMSOnOff -->
       <sensorSMSOnOff>false</sensorSMSOnOff>
       <!-- bool sensorBuzzerOnOff -->
       <sensorBuzzerOnOff>false</sensorBuzzerOnOff>
       <!-- ns__Relay sensorRelay -->
       <sensorRelay>
       </sensorRelay>
       <!-- bool sensorLEDFlag -->
       <sensorLEDFlag>false</sensorLEDFlag>
       <!-- enum ns__SensorType sensorType -->
       <sensorType>Multi</sensorType>
       <!-- ns__ErrorCode sensorError -->
       <sensorError>
       </sensorError>
      </deviceSensors>
     </deviceSensors>
     <!-- ns__ErrorCode deviceError -->
     <deviceError>
      <!-- int errorNumber -->
      <errorNumber>0</errorNumber>
      <!-- std::string errorMessage -->
      <errorMessage></errorMessage>
      <!-- enum ns__SettingLevel errorType -->
      <errorType>Normal</errorType>
     </deviceError>
     <!-- int deviceTransPower -->
     <deviceTransPower>315</deviceTransPower>
     <!-- int deviceTableCapacity -->
     <deviceTableCapacity>0</deviceTableCapacity>
     <!-- ns__GPS deviceGPS -->
     <deviceGPS>
      <!-- double gpsX -->
      <gpsX>0</gpsX>
      <!-- double gpsY -->
      <gpsY>0</gpsY>
     </deviceGPS>
     <!-- std::string deviceKeyType -->
     <deviceKeyType></deviceKeyType>
    </activityLogDevice>
    <!-- ns__User activityLogUser -->
    <activityLogUser>
     <!-- int userId -->
     <userId>0</userId>
     <!-- std::string userName -->
     <userName></userName>
     <!-- std::string userPassword -->
     <userPassword></userPassword>
     <!-- std::string userNewPassword -->
     <userNewPassword></userNewPassword>
     <!-- std::string userFirstName -->
     <userFirstName></userFirstName>
     <!-- std::string userLastName -->
     <userLastName></userLastName>
     <!-- enum ns__UserType userType -->
     <userType>Monitor</userType>
     <!-- std::string userKey -->
     <userKey></userKey>
     <!-- time_t userSubmit -->
     <userSubmit>2016-05-24T06:19:17Z</userSubmit>
     <!-- ns__ErrorCode userError -->
     <userError>
      <!-- int errorNumber -->
      <errorNumber>0</errorNumber>
      <!-- std::string errorMessage -->
      <errorMessage></errorMessage>
      <!-- enum ns__SettingLevel errorType -->
      <errorType>Normal</errorType>
     </userError>
    </activityLogUser>
    <!-- ns__ErrorCode activityError -->
    <activityError>
     <!-- int errorNumber -->
     <errorNumber>0</errorNumber>
     <!-- std::string errorMessage -->
     <errorMessage></errorMessage>
     <!-- enum ns__SettingLevel errorType -->
     <errorType>Normal</errorType>
    </activityError>
   </responseActivityLogInfo>
  </ns:GetActivityLogResponse>
 </SOAP-ENV:Body>
</SOAP-ENV:Envelope>
